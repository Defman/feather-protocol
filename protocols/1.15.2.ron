(
    version: 578,
    packets: {
        (Server, Handshaking, 0x00): (
            name: "handshake",
            custom_type: Struct({
                "protocol_version": VarInt,
                "server_address": String(255),
                "server_port": U16,
                "next_state": CustomType("state", Enum(
                    variant: Prefixed(VarInt),
                    variants: {
                        (1, "status"): Unit,
                        (2, "login"): Unit,
                    }
                ))
            })
        ),
        (Client, Status, 0x00): (
            name: "response",
            custom_type: Struct({
                "json_lenght": VarInt,
				"json_response": String(32767),
            })
        ),
		(Client, Status, 0x01): (
            name: "pong",
            custom_type: Struct({
                "payload": U8,
            })
        ),
		(Server, Status, 0x00): (
            name: "request",
            custom_type: Struct({})
        ),
		(Server, Status, 0x01): (
            name: "ping",
            custom_type: Struct({
				"payload": I64
            })
        ),
		(Client, Login, 0x00): (
           name: "disconnect",
           custom_type: Struct({
               "reason": Shared("chat"),
           })
        ),		
		(Client, Login, 0x01): (
            name: "encryption_request",
            custom_type: Struct({
                "server_id": String(20),
				"public_key_lenght": VarInt,
				"public_key": Array(
                    type: I8,
                    length: Prefixed(VarInt)
                ),
				"verify_token_length": VarInt,
				"verify_token": Array(
                    type: I8,
                    length: Prefixed(VarInt)
                ),
            })
        ),
		(Client, Login, 0x02): (
            name: "login_success",
            custom_type: Struct({
                "uuid": Uuid,
				"username": String(16),
            })
        ),
		(Client, Login, 0x03): (
            name: "set_compression",
            custom_type: Struct({
                "threshold": VarInt,
            })
        ),
		(Client, Login, 0x04): (
            name: "login_plugin_request",
            custom_type: Struct({
                "message_id": VarInt,
				"channel": Shared("identifier"),
				"data": Array(
                    type: I8,
                    length: Prefixed(VarInt)
                ),
            })
        ),
		(Server, Login, 0x00): (
            name: "login_start",
            custom_type: Struct({
                "name": String(16),
            })
        ),
        (Server, Login, 0x01): (
            name: "encryption_response",
            custom_type: Struct({
                "shared_secret_length": VarInt,
                "shared_secret": Array(
                    type: I8,
                    length: Prefixed(VarInt)
                ),
                "verify_token_length": VarInt,
                "verify_token": Array(
                    type: I8,
                    length: Prefixed(VarInt)
                ),
            })
        ),
        (Server, Login, 0x02): (
            name: "login_plugin_response",
            custom_type: Struct({
                "message_id": VarInt,
                "successful": Boolean,
                "data": Option(Array(
                    type: I8,
                    length: Prefixed(VarInt)
                ),),
            })
        ),
        (Client, Play, 0x04): (
            name: "spawn_painting",
            custom_type: Struct({
                "entity_id": VarInt,
                "entity_uuid": Uuid,
                "motive": VarInt,
                "location": Shared("position"),
                "direction": CustomType("direction", Enum(
                    variant: Prefixed(U8),
                    variants: {
                        (0, "south"): Unit,
                        (1, "west"): Unit,
                        (2, "north"): Unit,
                        (3, "east"): Unit,
                    },
                )),
            })
        ),
        (Client, Play, 0): (
            name: "spawn_entity",
            custom_type: Struct({
                "entity_id": VarInt,
                "object_uuid": Uuid,
                "yype": VarInt,
                "x": F64,
                "y": F64,
                "z": F64,
                "pitch": U8, // Pay attention to the angle confusion between Java and Wiki.vg
                "yaw": U8,
                "data": I32,
                "velocity_x": I16, // Probably fine as u16
                "velocity_y": I16,
                "velocity_z": I16,
            })
        ),
        (Client, Play, 1): (
            name: "spawn_experience_orb",
            custom_type: Struct({
                "entity_id": VarInt,
                "x": F64,
                "y": F64,
                "z": F64,
                "count": I16, // Probably fine as u16
            })
        ),
        (Client, Play, 2): (
            name: "spawn_weather_entity",
            custom_type: Struct({
                "entity_id": VarInt,
                "type": CustomType("type",Enum(
                    variant: Prefixed(VarInt),
                    variants: {
                        (1, "thunderbolt"): Unit,
                    },
                )),
                "x": F64,
                "y": F64,
                "z": F64
            })
        ),
        (Client, Play, 3): (
            name: "spawn_living_entity",
            custom_type: Struct({
                "entity_id": VarInt,
                "entity_uuid": Uuid,
                "type": VarInt,
                "x": F64,
                "y": F64,
                "z": F64,
                "yaw": U16,
                "pitch": U16,
                "head_pitch": U16,
                "velocity_x": I16,
                "velocity_y": I16,
                "velocity_z": I16
            })
        ),
        (Client, Play, 5): (
            name: "spawn_player",
            custom_type: Struct({
                "entity_id": VarInt,
                "player_uuid": Uuid,
                "x": F64,
                "y": F64,
                "z": F64,
                "yaw": U16,
                "pitch": U16
            })
        ),
        (Client, Play, 6): (
            name: "entity_animation",
            custom_type: Struct({
                "entity_id": VarInt,
                "animation": U8
            })
        ),
        (Server, Play, 0x28): (
            name: "update_structure_block",
            custom_type: Struct({
                "location": Shared("postion"),
                "action": CustomType("action", Enum(
                    variant: Prefixed(VarInt),
                    variants: {
                        (0, "update_data"): Unit,
                        (1, "save_structure"): Unit,
                        (2, "load_the_structure"): Unit,
                        (3, "detect_size"): Unit,
                    }
                )),
                "mode": CustomType("mode", Enum(
                    variant: Prefixed(VarInt),
                    variants: {
                        (0, "save"): Unit,
                        (1, "load"): Unit,
                        (2, "corner"): Unit,
                        (3, "data"): Unit,
                    }
                )),
                "name": String(0),
                "offset_x": U8,
                "offset_y": U8,
                "offset_z": U8,
                "size_x": U8,
                "size_y": U8,
                "size_z": U8,
                "mirror": CustomType("mirror", Enum(
                    variant: Prefixed(VarInt),
                    variants: {
                        (0, "none"): Unit,
                        (1, "left_right"): Unit,
                        (2, "front_back"): Unit,
                    }
                )),
                "rotation": CustomType("rotation", Enum(
                    variant: Prefixed(VarInt),
                    variants: {
                        (0, "none"): Unit,
                        (1, "clockwise_90"): Unit,
                        (2, "clockwise_180"): Unit,
                        (3, "counter_clockwise_90"): Unit,
                    }
                ))
            })
        ),
        (Server, Play, 0x29): (
            name: "update_sign",
            custom_type: Struct({
                "location": Shared("position"),
                "line_1": String(384),
                "line_2": String(384),
                "line_3": String(384),
                "line_4": String(384),                
            })
        ),
        (Server, Play, 0x2A): (
            name: "animation",
            custom_type: Struct({
                "hand": Shared("hand"),
            }),
        ),
        (Server, Play, 0x1B): (
            name: "spectate",
            custom_type: Struct({
                "target_player": Uuid,
            }),
        ),
        (Server, Play, 0x2C): (
            name: "player_block_placement",
            custom_type: Struct({
                "hand": Shared("hand"),
                "location": Shared("position"),
                "face": Shared("face"),
                "cursor_position_x": F32,
                "cursor_position_y": F32,
                "cursor_position_z": F32,
                "inside_block": Boolean,
            })
        )
    },
    shared_types: {
        "hand": Enum(
            variant: Prefixed(VarInt),
            variants: {
                (0, "main_hand"): Unit,
                (1, "off_hand"): Unit,
            },
        ),
        "position": BitField({
            "x": I32(26),
            "z": I32(26),
            "y": I16(12),
        }),
        "face": Enum(
            variant: Prefixed(VarInt),
            variants: {
                (0, "bottom"): Unit,
                (1, "top"): Unit,
                (2, "north"): Unit,
                (3, "south"): Unit,
                (4, "west"): Unit,
                (5, "east"): Unit,
            }
        )
    },
)