(
    version: 578,
    packets: {
        (Client, Status, 0): Struct(
            name: "response",
            fields: {
                "json_lenght": Integer(VarInt),
                "json_response": Primitive(String(32767)),
            },
        ),
        (Client, Status, 1): Struct(
            name: "pong",
            fields: {
                "payload": Integer(I64),
            },
        ),
        (Client, Login, 0): Struct(
            name: "disconnect",
            fields: {
                "reason": Primitive(Shared("chat")),
            },
        ),
        (Client, Login, 1): Struct(
            name: "encryption_request",
            fields: {
                "server_id": Primitive(String(20)),
                "public_key": Primitive(Array(
                    length: Prefixed(VarInt),
                    field_type: Integer(U8),
                )),
                "verify_token": Primitive(Array(
                    length: Prefixed(VarInt),
                    field_type: Integer(U8),
                )),
            },
        ),
        (Client, Login, 2): Struct(
            name: "login_success",
            fields: {
                "uuid": Primitive(String(36)),
                "username": Primitive(String(16)),
            },
        ),
        (Client, Login, 3): Struct(
            name: "set_compression",
            fields: {
                "threshold": Integer(VarInt),
            },
        ),
        (Client, Login, 4): Struct(
            name: "login_plugin_request",
            fields: {
                "message_id": Integer(VarInt),
                "channel": Primitive(Shared("identifier")),
                "data": Primitive(Array(
                    length: RemainingLength,
                    field_type: Integer(U8),
                )),
            },
        ),
        (Client, Play, 0): Struct(
            name: "spawn_entity",
            fields: {
                "entity_id": Primitive(Shared("entity_id")),
                "object_uuid": Primitive(Uuid),
                "type": Integer(VarInt),
                "x": Float(F64),
                "y": Float(F64),
                "z": Float(F64),
                "pitch": Integer(U8),
                "yaw": Integer(U8),
                "data": Integer(I32),
                "velocity_x": Integer(I16),
                "velocity_y": Integer(I16),
                "velocity_z": Integer(I16),
            },
        ),
        (Client, Play, 1): Struct(
            name: "spawn_experience_orb",
            fields: {
                "entity_id": Primitive(Shared("entity_id")),
                "x": Float(F64),
                "y": Float(F64),
                "z": Float(F64),
                "count": Integer(I16),
            },
        ),
        (Client, Play, 2): Struct(
            name: "spawn_weather_entity",
            fields: {
                "entity_id": Primitive(Shared("entity_id")),
                "type": CustomType(Enum(
                    name: "type",
                    variant: Integer(VarInt),
                    variants: {
                        1: Unit(
                            name: "thunderbolt",
                        ),
                    },
                )),
                "x": Float(F64),
                "y": Float(F64),
                "z": Float(F64),
            },
        ),
        (Client, Play, 3): Struct(
            name: "spawn_living_entity",
            fields: {
                "entity_id": Primitive(Shared("entity_id")),
                "entity_uuid": Primitive(Uuid),
                "type": Integer(VarInt),
                "x": Float(F64),
                "y": Float(F64),
                "z": Float(F64),
                "yaw": Integer(U16),
                "pitch": Integer(U16),
                "head_pitch": Integer(U16),
                "velocity_x": Integer(I16),
                "velocity_y": Integer(I16),
                "velocity_z": Integer(I16),
            },
        ),
        (Client, Play, 4): Struct(
            name: "spawn_painting",
            fields: {
                "entity_id": Primitive(Shared("entity_id")),
                "entity_uuid": Primitive(Uuid),
                "motive": CustomType(Enum(
                    name: "motive",
                    variant: Integer(VarInt),
                    variants: {
                        0: Unit(
                            name: "kebab",
                        ),
                        1: Unit(
                            name: "aztec",
                        ),
                        2: Unit(
                            name: "alban",
                        ),
                        3: Unit(
                            name: "aztec2",
                        ),
                        4: Unit(
                            name: "bomb",
                        ),
                        5: Unit(
                            name: "plant",
                        ),
                        6: Unit(
                            name: "wasteland",
                        ),
                        7: Unit(
                            name: "pool",
                        ),
                        8: Unit(
                            name: "courbet",
                        ),
                        9: Unit(
                            name: "sea",
                        ),
                        10: Unit(
                            name: "sunset",
                        ),
                        11: Unit(
                            name: "creebet",
                        ),
                        12: Unit(
                            name: "wanderer",
                        ),
                        13: Unit(
                            name: "graham",
                        ),
                        14: Unit(
                            name: "match",
                        ),
                        15: Unit(
                            name: "bust",
                        ),
                        16: Unit(
                            name: "stage",
                        ),
                        17: Unit(
                            name: "void",
                        ),
                        18: Unit(
                            name: "skull_and_roses",
                        ),
                        19: Unit(
                            name: "wither",
                        ),
                        20: Unit(
                            name: "fighters",
                        ),
                        21: Unit(
                            name: "pointer",
                        ),
                        22: Unit(
                            name: "pigscene",
                        ),
                        23: Unit(
                            name: "burning_skull",
                        ),
                        24: Unit(
                            name: "skeleton",
                        ),
                        25: Unit(
                            name: "donkey_kong",
                        ),
                    },
                )),
                "location": Primitive(Shared("position")),
                "direction": CustomType(Enum(
                    name: "direction",
                    variant: Integer(U8),
                    variants: {
                        0: Unit(
                            name: "south",
                        ),
                        1: Unit(
                            name: "west",
                        ),
                        2: Unit(
                            name: "north",
                        ),
                        3: Unit(
                            name: "east",
                        ),
                    },
                )),
            },
        ),
        (Client, Play, 5): Struct(
            name: "spawn_player",
            fields: {
                "entity_id": Primitive(Shared("entity_id")),
                "player_uuid": Primitive(Uuid),
                "x": Float(F64),
                "y": Float(F64),
                "z": Float(F64),
                "yaw": Integer(U8),
                "pitch": Integer(U8),
            },
        ),
        (Client, Play, 6): Struct(
            name: "entity_animation",
            fields: {
                "entity_id": Primitive(Shared("entity_id")),
                "animation": CustomType(Enum(
                    name: "animation",
                    variant: Integer(U8),
                    variants: {
                        0: Unit(
                            name: "swing_main_arm",
                        ),
                        1: Unit(
                            name: "take_damage",
                        ),
                        2: Unit(
                            name: "leave_bed",
                        ),
                        3: Unit(
                            name: "swing_offhand",
                        ),
                        4: Unit(
                            name: "critical_effect",
                        ),
                        5: Unit(
                            name: "magic_critical_effect",
                        ),
                    },
                )),
            },
        ),
        (Client, Play, 7): Struct(
            name: "statistics",
            fields: {
                "statistics": Primitive(Array(
                    length: Prefixed(VarInt),
                    field_type: CustomType(Struct(
                        name: "statistic",
                        fields: {
                            "category_id": Integer(VarInt),
                            "statistic_id": Integer(VarInt),
                        },
                    )),
                )),
                "value": Integer(VarInt),
            },
        ),
        (Client, Play, 8): Struct(
            name: "acknowledge_player_digging",
            fields: {
                "location": Primitive(Shared("position")),
                "block": Integer(VarInt),
                "status": CustomType(Enum(
                    name: "status",
                    variant: Integer(VarInt),
                    variants: {
                        0: Unit(
                            name: "started_digging",
                        ),
                        1: Unit(
                            name: "cancelled_digging",
                        ),
                        2: Unit(
                            name: "finished_digging",
                        ),
                    },
                )),
                "successful": Primitive(Boolean),
            },
        ),
        (Client, Play, 9): Struct(
            name: "block_break_animation",
            fields: {
                "entity_id": Primitive(Shared("entity_id")),
                "location": Primitive(Shared("position")),
                "destroy_stage": Integer(I8),
            },
        ),
        (Client, Play, 10): Struct(
            name: "block_entity_data",
            fields: {
                "location": Primitive(Shared("position")),
                "action": Integer(U8),
                "nbt_data": Primitive(Shared("nbt_tag")),
            },
        ),
        (Client, Play, 11): Struct(
            name: "block_action",
            fields: {
                "location": Primitive(Shared("position")),
                "action_id": Integer(U8),
                "action_param": Integer(U8),
                "block_type": Integer(VarInt),
            },
        ),
        (Client, Play, 12): Struct(
            name: "block_change",
            fields: {
                "location": Primitive(Shared("position")),
                "block_id": Integer(VarInt),
            },
        ),
        (Client, Play, 13): Struct(
            name: "boss_bar",
            fields: {
                "uuid": Primitive(Uuid),
                "action": CustomType(Enum(
                    name: "action",
                    variant: Integer(VarInt),
                    variants: {
                        0: Struct(
                            name: "add",
                            fields: {
                                "title": Primitive(Shared("chat")),
                                "health": Float(F32),
                                "color": Primitive(Shared("color")),
                                "division": Primitive(Shared("division")),
                                "flags": CustomType(BitFlags(
                                    name: "flags",
                                    field_type: U8,
                                    flags: {
                                        1: "darken_sky",
                                        2: "dragon_bar",
                                        4: "create_fog",
                                    },
                                )),
                            },
                        ),
                        1: Unit(
                            name: "remove",
                        ),
                        2: Struct(
                            name: "update_health",
                            fields: {
                                "health": Float(F32),
                            },
                        ),
                        3: Struct(
                            name: "update_title",
                            fields: {
                                "title": Primitive(Shared("chat")),
                            },
                        ),
                        4: Struct(
                            name: "update_style",
                            fields: {
                                "color": Primitive(Shared("color")),
                                "dividers": Primitive(Shared("division")),
                            },
                        ),
                        5: Struct(
                            name: "update_flags",
                            fields: {
                                "flags": Integer(U8),
                            },
                        ),
                    },
                )),
            },
        ),
        (Client, Play, 14): Struct(
            name: "server_difficulty",
            fields: {
                "difficulty": Primitive(Shared("difficulty")),
                "difficulty_locked": Primitive(Boolean),
            },
        ),
        (Client, Play, 15): Struct(
            name: "chat_message",
            fields: {
                "json_data": Primitive(Shared("chat")),
                "position": CustomType(Enum(
                    name: "position",
                    variant: Integer(I8),
                    variants: {
                        0: Unit(
                            name: "chat",
                        ),
                        1: Unit(
                            name: "system_message",
                        ),
                        2: Unit(
                            name: "game_info",
                        ),
                    },
                )),
            },
        ),
        (Client, Play, 16): Struct(
            name: "multi_block_change",
            fields: {
                "chunk_x": Integer(I32),
                "chunk_z": Integer(I32),
                "record": Primitive(Array(
                    length: Prefixed(VarInt),
                    field_type: CustomType(Struct(
                        name: "record",
                        fields: {
                            "horizontal_position": Integer(U8),
                            "y_coordinate": Integer(U8),
                            "block_id": Integer(VarInt),
                        },
                    )),
                )),
            },
        ),
        (Client, Play, 17): Struct(
            name: "tab_complete",
            fields: {
                "id": Integer(VarInt),
                "start": Integer(VarInt),
                "lentgh": Integer(VarInt),
                "count": Integer(VarInt),
                "matches": Primitive(Array(
                    length: Prefixed(VarInt),
                    field_type: CustomType(Struct(
                        name: "matches",
                        fields: {
                            "match": Primitive(String(32767)),
                            "tooltip": Primitive(Option(Primitive(Shared("chat")))),
                        },
                    )),
                )),
            },
        ),
        (Client, Play, 18): Struct(
            name: "declare_command",
            fields: {
                "count": Integer(VarInt),
                "nodes": Integer(VarInt),
                "length": Primitive(Array(
                    length: Prefixed(VarInt),
                    field_type: Primitive(Shared("node")),
                )),
                "root_index": Integer(VarInt),
            },
        ),
        (Client, Play, 19): Struct(
            name: "window_confirmation",
            fields: {
                "window_id": Integer(I8),
                "action_number": Integer(U16),
                "accepted": Primitive(Boolean),
            },
        ),
        (Client, Play, 20): Struct(
            name: "close_window",
            fields: {
                "window_id": Integer(U8),
            },
        ),
        (Client, Play, 21): Struct(
            name: "window_items",
            fields: {
                "window_id": Integer(U8),
                "count": Integer(I16),
                "slot_data": Primitive(Array(
                    length: Prefixed(VarInt),
                    field_type: Primitive(Shared("slot")),
                )),
            },
        ),
        (Client, Play, 22): Struct(
            name: "window_property",
            fields: {
                "window_id": Integer(U8),
                "property": Integer(I16),
                "value": Integer(I16),
            },
        ),
        (Client, Play, 23): Struct(
            name: "set_slot",
            fields: {
                "window_id": Integer(U8),
                "slot": Integer(I16),
                "slot_data": Primitive(Shared("slot")),
            },
        ),
        (Client, Play, 24): Struct(
            name: "set_cooldown",
            fields: {
                "item_id": Integer(VarInt),
                "cooldown_ticks": Integer(VarInt),
            },
        ),
        (Client, Play, 25): Struct(
            name: "plugin_message",
            fields: {
                "channel": Primitive(Shared("identifier")),
                "data": Primitive(Array(
                    length: Prefixed(VarInt),
                    field_type: Integer(I8),
                )),
            },
        ),
        (Client, Play, 26): Struct(
            name: "named_sound_effect",
            fields: {
                "sound_name": Primitive(Shared("identifier")),
                "sound_category": CustomType(Enum(
                    name: "sound_category",
                    variant: Integer(VarInt),
                    variants: {
                        0: Unit(
                            name: "master",
                        ),
                        1: Unit(
                            name: "music",
                        ),
                        2: Unit(
                            name: "record",
                        ),
                        3: Unit(
                            name: "weather",
                        ),
                        4: Unit(
                            name: "block",
                        ),
                        5: Unit(
                            name: "hostile",
                        ),
                        6: Unit(
                            name: "neutral",
                        ),
                        7: Unit(
                            name: "player",
                        ),
                        8: Unit(
                            name: "ambient",
                        ),
                        9: Unit(
                            name: "voice",
                        ),
                    },
                )),
                "effect_position_x": Integer(I32),
                "effect_position_y": Integer(I32),
                "effect_position_z": Integer(I32),
                "volume": Float(F32),
                "pitch": Float(F32),
            },
        ),
        (Client, Play, 27): Struct(
            name: "disconnect",
            fields: {
                "reason": Primitive(Shared("chat")),
            },
        ),
        (Client, Play, 28): Struct(
            name: "entity_status",
            fields: {
                "entity_id": Integer(I32),
                "entity_status": Integer(U8),
            },
        ),
        (Client, Play, 29): Struct(
            name: "explosion",
            fields: {
                "x": Float(F32),
                "y": Float(F32),
                "z": Float(F32),
                "strength": Float(F32),
                "record_count": Integer(I32),
                "records": Primitive(Array(
                    length: Prefixed(VarInt),
                    field_type: CustomType(Struct(
                        name: "relative_location",
                        fields: {
                            "x": Integer(I8),
                            "y": Integer(I8),
                            "z": Integer(I8),
                        },
                    )),
                )),
                "player_motion_x": Float(F32),
                "player_motion_y": Float(F32),
                "player_motion_z": Float(F32),
            },
        ),
        (Client, Play, 30): Struct(
            name: "unload_chunk",
            fields: {
                "chunk_x": Integer(I32),
                "chunk_y": Integer(I32),
            },
        ),
        (Client, Play, 31): Struct(
            name: "change_game_state",
            fields: {
                "reason": CustomType(Enum(
                    name: "sound_category",
                    variant: Integer(U8),
                    variants: {
                        0: Unit(
                            name: "invalid_bed",
                        ),
                        1: Unit(
                            name: "end_raining",
                        ),
                        2: Unit(
                            name: "begin_raining",
                        ),
                        3: Unit(
                            name: "change_gamemode",
                        ),
                        4: Unit(
                            name: "exit_end",
                        ),
                        5: Unit(
                            name: "demo_message",
                        ),
                        6: Unit(
                            name: "arrow_hitting_player",
                        ),
                        7: Unit(
                            name: "fade_value",
                        ),
                        8: Unit(
                            name: "fade_time",
                        ),
                        9: Unit(
                            name: "play_pufferfish_sting_sound",
                        ),
                        10: Unit(
                            name: "play_elder_guardian_mob_apperance",
                        ),
                        11: Unit(
                            name: "enable_respawn_screen",
                        ),
                    },
                )),
                "value": Float(F32),
            },
        ),
        (Client, Play, 32): Struct(
            name: "open_horse_window",
            fields: {
                "window_id": Integer(I8),
                "number_of_slots": Integer(VarInt),
                "entity_id": Integer(I32),
            },
        ),
        (Client, Play, 33): Struct(
            name: "keep_alive",
            fields: {
                "keep_alive_id": Integer(I64),
            },
        ),
        (Client, Play, 34): Struct(
            name: "chunk_data",
            fields: {
                "chunk_x": Integer(I32),
                "chunk_z": Integer(I32),
                "full_chunk": Primitive(Boolean),
                "primary_bit_mask": Integer(VarInt),
                "heightmaps": Primitive(Nbt),
                "biomes": Primitive(Option(Primitive(Array(
                    length: Prefixed(VarInt),
                    field_type: Integer(I32),
                )))),
                "data": Primitive(Array(
                    length: Prefixed(VarInt),
                    field_type: Integer(I8),
                )),
                "number_of_block_entities": Integer(VarInt),
                "block_entities": Primitive(Array(
                    length: Prefixed(VarInt),
                    field_type: Primitive(Nbt),
                )),
            },
        ),
        (Client, Play, 35): Struct(
            name: "effect",
            fields: {
                "effect_id": Integer(I32),
                "location": Primitive(Shared("position")),
                "data": Integer(I32),
                "disable_relative_volume": Primitive(Boolean),
            },
        ),
        (Client, Play, 36): Struct(
            name: "particle",
            fields: {
                "particle_id": Integer(I32),
                "long_distance": Primitive(Boolean),
                "x": Float(F64),
                "y": Float(F64),
                "z": Float(F64),
                "offset_x": Float(F32),
                "offset_y": Float(F32),
                "offset_z": Float(F32),
                "particle_data": Float(F32),
                "particle_count": Integer(I32),
                "data": Integer(I32),
            },
        ),
        (Client, Play, 37): Struct(
            name: "update_light",
            fields: {
                "chunk_x": Integer(VarInt),
                "chunk_z": Integer(VarInt),
                "sky_light_mask": Integer(VarInt),
                "block_light_mask": Integer(VarInt),
                "empty_sky_light_mask": Integer(VarInt),
                "empty_block_light_mask": Integer(VarInt),
                "sky_light_arrays": Primitive(Array(
                    length: FixedLength(2048),
                    field_type: Integer(I8),
                )),
                "block_light_arrays": Primitive(Array(
                    length: FixedLength(2048),
                    field_type: Integer(I8),
                )),
            },
        ),
        (Client, Play, 38): Struct(
            name: "join_game",
            fields: {
                "entity_id": Integer(I32),
                "gamemode": Primitive(Shared("gamemode")),
                "dimension": Primitive(Shared("dimension")),
                "hashed_seed": Integer(I64),
                "max_players": Integer(U8),
                "level_type": CustomType(Enum(
                    name: "level_type",
                    variant: Primitive(String(16)),
                    variants: {
                        "amplified": Unit(
                            name: "amplified",
                        ),
                        "buffet": Unit(
                            name: "buffet",
                        ),
                        "customized": Unit(
                            name: "customized",
                        ),
                        "default": Unit(
                            name: "default",
                        ),
                        "default_1_1": Unit(
                            name: "default_1_1",
                        ),
                        "flat": Unit(
                            name: "flat",
                        ),
                        "largeBiomes": Unit(
                            name: "largeBiomes",
                        ),
                    },
                )),
                "view_distance": Integer(VarInt),
                "reduced_debug_info": Primitive(Boolean),
                "enable_respawn_screen": Primitive(Boolean),
            },
        ),
        (Client, Play, 39): Struct(
            name: "map_data",
            fields: {
                "map_id": Integer(VarInt),
                "scale": Integer(I8),
                "tracking_position": Primitive(Boolean),
                "locked": Primitive(Boolean),
                "icon_count": Integer(VarInt),
                "icon": Primitive(Array(
                    length: Prefixed(VarInt),
                    field_type: CustomType(Struct(
                        name: "icon",
                        fields: {
                            "type": Integer(VarInt),
                            "x": Integer(I8),
                            "z": Integer(I8),
                            "direction": Integer(I8),
                            "display_name": Primitive(Option(Primitive(Shared("chat")))),
                        },
                    )),
                )),
                "columns": Integer(U8),
                "rows": Primitive(Option(Integer(U8))),
                "x": Primitive(Option(Integer(U8))),
                "z": Primitive(Option(Integer(U8))),
                "data": Primitive(Option(Primitive(Array(
                    length: Prefixed(VarInt),
                    field_type: Integer(U8),
                )))),
            },
        ),
        (Client, Play, 40): Struct(
            name: "trade_list",
            fields: {
                "window_id": Integer(VarInt),
                "size": Integer(I8),
                "trades": Primitive(Array(
                    length: Prefixed(I8),
                    field_type: CustomType(Struct(
                        name: "trade",
                        fields: {
                            "input_item_1": Primitive(Shared("slot")),
                            "output_item": Primitive(Shared("slot")),
                            "input_item_2": Primitive(Option(Primitive(Shared("slot")))),
                            "trade_disabled": Primitive(Boolean),
                            "number_of_trade_uses": Integer(I32),
                            "maximum_number_of_trade_uses": Integer(I32),
                            "xp": Integer(I32),
                            "special_price": Integer(I32),
                            "price_multiplier": Float(F32),
                            "demand": Integer(I32),
                        },
                    )),
                )),
                "villager_level": Integer(VarInt),
                "experience": Integer(VarInt),
                "is_regular_villager": Primitive(Boolean),
                "can_restock": Primitive(Boolean),
            },
        ),
        (Client, Play, 41): Struct(
            name: "entity_position",
            fields: {
                "entity_id": Integer(VarInt),
                "delta_x": Integer(I16),
                "delta_y": Integer(I16),
                "delta_z": Integer(I16),
                "on_ground": Primitive(Boolean),
            },
        ),
        (Client, Play, 42): Struct(
            name: "entity_position_and_rotation",
            fields: {
                "entity_id": Integer(VarInt),
                "delta_x": Integer(I16),
                "delta_y": Integer(I16),
                "delta_z": Integer(I16),
                "yaw": Integer(U8),
                "pitch": Integer(U8),
                "on_ground": Primitive(Boolean),
            },
        ),
        (Client, Play, 43): Struct(
            name: "entity_rotation",
            fields: {
                "entity_id": Integer(VarInt),
                "yaw": Integer(U8),
                "pitch": Integer(U8),
                "on_ground": Primitive(Boolean),
            },
        ),
        (Client, Play, 44): Struct(
            name: "entity_movement",
            fields: {
                "entity_id": Integer(VarInt),
            },
        ),
        (Client, Play, 45): Struct(
            name: "vehicle_move",
            fields: {
                "x": Float(F64),
                "y": Float(F64),
                "z": Float(F64),
                "yaw": Float(F32),
                "pitch": Float(F32),
            },
        ),
        (Client, Play, 46): Struct(
            name: "open_book",
            fields: {
                "hand": CustomType(Enum(
                    name: "hand",
                    variant: Integer(VarInt),
                    variants: {
                        0: Unit(
                            name: "main_hand",
                        ),
                        1: Unit(
                            name: "off_hand",
                        ),
                    },
                )),
            },
        ),
        (Client, Play, 47): Struct(
            name: "open_window",
            fields: {
                "window_id": Integer(VarInt),
                "window_type": Integer(VarInt),
                "window_title": Primitive(Shared("chat")),
            },
        ),
        (Client, Play, 48): Struct(
            name: "open_sign_editor",
            fields: {
                "location": Primitive(Shared("position")),
            },
        ),
        (Client, Play, 49): Struct(
            name: "craft_recipe_response",
            fields: {
                "window_id": Integer(I8),
                "recipe": Primitive(String(32767)),
            },
        ),
        (Client, Play, 50): Struct(
            name: "player_abilities",
            fields: {
                "flags": CustomType(BitFlags(
                    name: "player_abilities",
                    field_type: U8,
                    flags: {
                        1: "invulnerable",
                        2: "flying",
                        4: "allow_flying",
                        8: "creative_mode",
                    },
                )),
                "recipe": Primitive(String(32767)),
            },
        ),
        (Client, Play, 51): Struct(
            name: "combat_event",
            fields: {
                "event": CustomType(Enum(
                    name: "combat_event",
                    variant: Integer(VarInt),
                    variants: {
                        0: Unit(
                            name: "enter_combat",
                        ),
                        1: Struct(
                            name: "end_combat",
                            fields: {
                                "duration": Integer(VarInt),
                                "entity_id": Integer(I32),
                            },
                        ),
                        2: Struct(
                            name: "entity_dead",
                            fields: {
                                "player_id": Integer(VarInt),
                                "entity_id": Integer(I32),
                                "message": Primitive(Shared("chat")),
                            },
                        ),
                    },
                )),
            },
        ),
        (Client, Play, 53): Struct(
            name: "face_player",
            fields: {
                "feet_eyes": Primitive(Shared("feet_eyes")),
                "target_x": Float(F64),
                "target_y": Float(F64),
                "target_z": Float(F64),
                "is_entity": Primitive(Boolean),
                "entity_id": Primitive(Option(Integer(VarInt))),
                "entity_feet_eyes": Primitive(Option(Primitive(Shared("feet_eyes")))),
            },
        ),
        (Client, Play, 54): Struct(
            name: "player_position_and_look",
            fields: {
                "x": Float(F64),
                "y": Float(F64),
                "z": Float(F64),
                "yaw": Float(F32),
                "pitch": Float(F32),
                "flags": CustomType(BitFlags(
                    name: "flags",
                    field_type: U8,
                    flags: {
                        1: "x",
                        2: "z",
                        4: "y",
                    },
                )),
                "teleport_id": Integer(VarInt),
            },
        ),
        (Client, Play, 56): Struct(
            name: "destroy_entities",
            fields: {
                "count": Integer(VarInt),
                "entity_ids": Primitive(Array(
                    length: Prefixed(VarInt),
                    field_type: Integer(VarInt),
                )),
            },
        ),
        (Client, Play, 57): Struct(
            name: "remove_entity_effect",
            fields: {
                "entity_id": Integer(VarInt),
                "effect_id": Integer(I8),
            },
        ),
        (Client, Play, 58): Struct(
            name: "resource_pack_send",
            fields: {
                "url": Primitive(String(32767)),
                "hash": Primitive(String(40)),
            },
        ),
        (Client, Play, 59): Struct(
            name: "respawn",
            fields: {
                "dimension": Primitive(String(32767)),
                "hashed_seed": Float(F64),
                "gamemode": Primitive(Shared("gamemode")),
                "level_type": Primitive(String(16)),
            },
        ),
        (Client, Play, 60): Struct(
            name: "entity_head_look",
            fields: {
                "entity_id": Integer(VarInt),
                "head_yaw": Integer(U8),
            },
        ),
        (Client, Play, 61): Struct(
            name: "select_advancement_tab",
            fields: {
                "identifier": Primitive(Option(Primitive(String(32767)))),
            },
        ),
        (Client, Play, 62): Struct(
            name: "world_border",
            fields: {
                "action": CustomType(Enum(
                    name: "world_border_action",
                    variant: Integer(VarInt),
                    variants: {
                        0: Struct(
                            name: "set_size",
                            fields: {
                                "diameter": Float(F64),
                            },
                        ),
                        1: Struct(
                            name: "lerp_size",
                            fields: {
                                "old_diameter": Float(F64),
                                "new_diameter": Float(F64),
                                "speed": Integer(VarLong),
                            },
                        ),
                        2: Struct(
                            name: "set_center",
                            fields: {
                                "x": Float(F64),
                                "z": Float(F64),
                            },
                        ),
                        3: Struct(
                            name: "intitialize",
                            fields: {
                                "x": Float(F64),
                                "z": Float(F64),
                                "old_diameter": Float(F64),
                                "new_diameter": Float(F64),
                                "speed": Integer(VarLong),
                                "portal_teleport_boundary": Integer(VarInt),
                                "warning_time": Integer(VarInt),
                                "warning_blocks": Integer(VarInt),
                            },
                        ),
                        4: Struct(
                            name: "set_warning_time",
                            fields: {
                                "warning_time": Integer(VarInt),
                            },
                        ),
                        5: Struct(
                            name: "set_warning_blocks",
                            fields: {
                                "warning_blocks": Integer(VarInt),
                            },
                        ),
                    },
                )),
            },
        ),
        (Client, Play, 63): Struct(
            name: "camera",
            fields: {
                "camera_id": Integer(VarInt),
            },
        ),
        (Client, Play, 64): Struct(
            name: "held_item_change",
            fields: {
                "slot": Integer(I8),
            },
        ),
        (Client, Play, 65): Struct(
            name: "update_view_position",
            fields: {
                "chunk_x": Integer(VarInt),
                "chunk_y": Integer(VarInt),
            },
        ),
        (Client, Play, 66): Struct(
            name: "update_view_distance",
            fields: {
                "view_distance": Integer(VarInt),
            },
        ),
        (Client, Play, 67): Struct(
            name: "display_scoreboard",
            fields: {
                "position": Integer(I8),
                "score_namme": Primitive(String(16)),
            },
        ),
        (Client, Play, 69): Struct(
            name: "attach_entity",
            fields: {
                "attached_entity_id": Integer(I32),
                "holding_entity_id": Integer(I32),
            },
        ),
        (Client, Play, 70): Struct(
            name: "entity_velocity",
            fields: {
                "entity_id": Integer(VarInt),
                "velocity_x": Integer(I16),
                "velocity_y": Integer(I16),
                "velocity_z": Integer(I16),
            },
        ),
        (Client, Play, 71): Struct(
            name: "entity_equipement",
            fields: {
                "entity_id": Integer(VarInt),
                "slot": CustomType(Enum(
                    name: "equipement_slot",
                    variant: Integer(VarInt),
                    variants: {
                        0: Unit(
                            name: "main_hand",
                        ),
                        1: Unit(
                            name: "off_hand",
                        ),
                        2: Unit(
                            name: "boots",
                        ),
                        3: Unit(
                            name: "leggings",
                        ),
                        4: Unit(
                            name: "chestplate",
                        ),
                        5: Unit(
                            name: "helmet",
                        ),
                    },
                )),
                "item": Primitive(Shared("slot")),
            },
        ),
        (Client, Play, 72): Struct(
            name: "set_experience",
            fields: {
                "experience_bar": Float(F32),
                "level": Integer(VarInt),
                "total_experience": Integer(VarInt),
            },
        ),
        (Client, Play, 73): Struct(
            name: "update_health",
            fields: {
                "health": Float(F32),
                "food": Integer(VarInt),
                "food_stauration": Float(F32),
            },
        ),
        (Client, Play, 74): Struct(
            name: "scoreboard_objective",
            fields: {
                "objective_name": Primitive(String(16)),
                "mode": CustomType(Enum(
                    name: "scoreboard_action",
                    variant: Integer(I8),
                    variants: {
                        0: Unit(
                            name: "create",
                        ),
                        1: Unit(
                            name: "remove",
                        ),
                        2: Unit(
                            name: "update",
                        ),
                    },
                )),
                "objective_value": Primitive(Option(Primitive(String(32767)))),
                "type": Primitive(Option(CustomType(Enum(
                    name: "scoreboard_mode",
                    variant: Integer(VarInt),
                    variants: {
                        0: Unit(
                            name: "integer",
                        ),
                        1: Unit(
                            name: "hearts",
                        ),
                    },
                )))),
            },
        ),
        (Client, Play, 75): Struct(
            name: "set_passengers",
            fields: {
                "entity_id": Integer(VarInt),
                "passenger_count": Integer(VarInt),
                "passengers": Primitive(Array(
                    length: Prefixed(U32),
                    field_type: Integer(VarInt),
                )),
            },
        ),
        (Client, Play, 76): Struct(
            name: "teams",
            fields: {
                "team name": Primitive(String(16)),
                "mode": Integer(I8),
                "action": CustomType(Enum(
                    name: "teams_action",
                    variant: Integer(U8),
                    variants: {
                        0: Struct(
                            name: "create_team",
                            fields: {
                                "team_display_name": Primitive(String(32767)),
                                "friendly_flags": CustomType(BitFlags(
                                    name: "friendly_flags",
                                    field_type: U8,
                                    flags: {
                                        1: "allow_friendly_fire",
                                        2: "can_see_invisible_players_on_same_team",
                                    },
                                )),
                                "name_tag_visibility": CustomType(Enum(
                                    name: "name_tag_visibility",
                                    variant: Primitive(String(32)),
                                    variants: {
                                        "always": Unit(
                                            name: "always",
                                        ),
                                        "hideForOtherTeams": Unit(
                                            name: "hide_for_other_teams",
                                        ),
                                        "hideForOwnTeam": Unit(
                                            name: "hide_for_own_team",
                                        ),
                                        "neve": Unit(
                                            name: "never",
                                        ),
                                    },
                                )),
                                "collision_rule": CustomType(Enum(
                                    name: "collision_rule",
                                    variant: Primitive(String(32)),
                                    variants: {
                                        "always": Unit(
                                            name: "always",
                                        ),
                                        "never": Unit(
                                            name: "never",
                                        ),
                                        "pushOtherTeams": Unit(
                                            name: "push_other_teams",
                                        ),
                                        "pushOwnTeam": Unit(
                                            name: "push_own_team",
                                        ),
                                    },
                                )),
                                "team_color": Integer(VarInt),
                                "team_prefix": Primitive(String(32767)),
                                "team_suffix": Primitive(String(32767)),
                                "entity_count": Integer(VarInt),
                                "entities": Primitive(Array(
                                    length: Prefixed(I32),
                                    field_type: Primitive(String(40)),
                                )),
                            },
                        ),
                        1: Unit(
                            name: "remove_team",
                        ),
                        2: Struct(
                            name: "update_team_info",
                            fields: {
                                "team_display_name": Primitive(String(32767)),
                                "friendly_flags": CustomType(BitFlags(
                                    name: "friendly_flags",
                                    field_type: U8,
                                    flags: {
                                        1: "allow_friendly_fire",
                                        2: "can_see_invisible_players_on_same_team",
                                    },
                                )),
                                "name_tag_visibility": CustomType(Enum(
                                    name: "name_tag_visibility",
                                    variant: Primitive(String(32)),
                                    variants: {
                                        "always": Unit(
                                            name: "always",
                                        ),
                                        "hideForOtherTeams": Unit(
                                            name: "hide_for_other_team",
                                        ),
                                        "hideForOwnTeam": Unit(
                                            name: "hide_for_own_team",
                                        ),
                                        "never": Unit(
                                            name: "never",
                                        ),
                                    },
                                )),
                                "collision_rule": CustomType(Enum(
                                    name: "collision_rule",
                                    variant: Primitive(String(32)),
                                    variants: {
                                        "always": Unit(
                                            name: "always",
                                        ),
                                        "never": Unit(
                                            name: "never",
                                        ),
                                        "pushOtherTeams": Unit(
                                            name: "push_other_teams",
                                        ),
                                        "pushOwnTeam": Unit(
                                            name: "push_own_team",
                                        ),
                                    },
                                )),
                                "team_color": Integer(VarInt),
                                "team_prefix": Primitive(String(32767)),
                                "team_suffix": Primitive(String(32767)),
                            },
                        ),
                        3: Struct(
                            name: "add_players_to_team",
                            fields: {
                                "entities": Primitive(Array(
                                    length: Prefixed(VarInt),
                                    field_type: Primitive(String(40)),
                                )),
                            },
                        ),
                        4: Struct(
                            name: "remove_players_from_team",
                            fields: {
                                "entities": Primitive(Array(
                                    length: Prefixed(VarInt),
                                    field_type: Primitive(String(40)),
                                )),
                            },
                        ),
                    },
                )),
            },
        ),
        (Client, Play, 77): Struct(
            name: "update_score",
            fields: {
                "entity_name": Primitive(String(40)),
                "action": CustomType(Enum(
                    name: "item_action",
                    variant: Integer(I8),
                    variants: {
                        0: Unit(
                            name: "create_or_update",
                        ),
                        1: Unit(
                            name: "remove",
                        ),
                    },
                )),
                "objective_name": Primitive(String(16)),
                "value": Primitive(Option(Integer(VarInt))),
            },
        ),
        (Client, Play, 78): Struct(
            name: "spawn_position",
            fields: {
                "location": Primitive(Shared("position")),
            },
        ),
        (Client, Play, 79): Struct(
            name: "time_update",
            fields: {
                "world_age": Integer(I64),
                "time_of_day": Integer(I64),
            },
        ),
        (Client, Play, 80): Struct(
            name: "title",
            fields: {
                "action": CustomType(Enum(
                    name: "title_action",
                    variant: Integer(VarInt),
                    variants: {
                        0: Struct(
                            name: "set_title",
                            fields: {
                                "title_text": Primitive(String(32767)),
                            },
                        ),
                        1: Struct(
                            name: "set_subtitle",
                            fields: {
                                "subtitle_text": Primitive(String(32767)),
                            },
                        ),
                        2: Struct(
                            name: "set_action_bar",
                            fields: {
                                "action_bar_text": Primitive(String(32767)),
                            },
                        ),
                        3: Struct(
                            name: "set_times_and_display",
                            fields: {
                                "fade_in": Integer(I32),
                                "stay": Integer(I32),
                                "fade_out": Integer(I32),
                            },
                        ),
                        4: Unit(
                            name: "hide",
                        ),
                        5: Unit(
                            name: "reset",
                        ),
                    },
                )),
            },
        ),
        (Client, Play, 81): Struct(
            name: "entity_sound_effect",
            fields: {
                "sound_id": Integer(VarInt),
                "sound_category": Integer(VarInt),
                "entity_id": Integer(VarInt),
                "volume": Float(F32),
                "pitch": Float(F32),
            },
        ),
        (Client, Play, 82): Struct(
            name: "sound_effect",
            fields: {
                "sound_id": Integer(VarInt),
                "sound_category": Integer(VarInt),
                "effect_position_x": Integer(I32),
                "effect_position_y": Integer(I32),
                "effect_position_z": Integer(I32),
                "volume": Float(F32),
                "pitch": Float(F32),
            },
        ),
        (Client, Play, 83): Struct(
            name: "stop_sound",
            fields: {
                "flags": Integer(I8),
                "source": Primitive(Option(Integer(VarInt))),
                "sound": Primitive(Option(Primitive(String(32767)))),
            },
        ),
        (Client, Play, 84): Struct(
            name: "player_list_header_and_footer",
            fields: {
                "header": Primitive(String(32767)),
                "footer": Primitive(String(32767)),
            },
        ),
        (Client, Play, 85): Struct(
            name: "nbt_query_response",
            fields: {
                "transaction_id": Integer(VarInt),
                "nbt": Primitive(Nbt),
            },
        ),
        (Client, Play, 86): Struct(
            name: "collect_item",
            fields: {
                "collected_entity_id": Integer(VarInt),
                "collector_entity_id": Integer(VarInt),
                "pickup_item_count": Integer(VarInt),
            },
        ),
        (Client, Play, 87): Struct(
            name: "entity_teleport",
            fields: {
                "entity_id": Integer(VarInt),
                "x": Float(F64),
                "y": Float(F64),
                "z": Float(F64),
                "yaw": Integer(U8),
                "pitch": Integer(U8),
                "on_ground": Primitive(Boolean),
            },
        ),
        (Client, Play, 89): Struct(
            name: "entity_properties",
            fields: {
                "entity_id": Integer(VarInt),
                "property": Primitive(Array(
                    length: Prefixed(I32),
                    field_type: CustomType(Struct(
                        name: "entity_property",
                        fields: {
                            "key": Primitive(String(64)),
                            "value": Float(F64),
                            "number_of_modifiers": Integer(VarInt),
                            "modifiers": Primitive(Array(
                                length: Prefixed(VarInt),
                                field_type: CustomType(Struct(
                                    name: "entity_modifiers",
                                    fields: {
                                        "uuid": Primitive(Uuid),
                                        "amount": Float(F64),
                                        "operation": Integer(I8),
                                    },
                                )),
                            )),
                        },
                    )),
                )),
            },
        ),
        (Client, Play, 90): Struct(
            name: "entity_effect",
            fields: {
                "entity_id": Integer(VarInt),
                "effect_id": Integer(I8),
                "amplifier": Integer(I8),
                "duration": Integer(VarInt),
                "flags": CustomType(BitFlags(
                    name: "entity_effect_flags",
                    field_type: I32,
                    flags: {
                        1: "is_ambient",
                        2: "show_particles",
                        4: "show_icon",
                    },
                )),
            },
        ),
        (Client, Play, 91): Struct(
            name: "declare_recipes",
            fields: {
                "recipes": Primitive(Array(
                    length: Prefixed(VarInt),
                    field_type: CustomType(Struct(
                        name: "recipe",
                        fields: {
                            "recipe_id": Primitive(String(32767)),
                            "data": CustomType(Enum(
                                name: "data",
                                variant: Primitive(String(32)),
                                variants: {
                                    "crafting_shaped": Struct(
                                        name: "crafting_shaped",
                                        fields: {
                                            "width": Integer(VarInt),
                                            "height": Integer(VarInt),
                                            "group": Primitive(String(128)),
                                            "ingredients": Primitive(Array(
                                                length: Prefixed(VarInt),
                                                field_type: Primitive(Array(
                                                    length: Prefixed(VarInt),
                                                    field_type: Primitive(Shared("slot")),
                                                )),
                                            )),
                                            "result": Primitive(Shared("slot")),
                                        },
                                    ),
                                    "crafting_shapeless": Struct(
                                        name: "crafting_shapeless",
                                        fields: {
                                            "group": Primitive(String(128)),
                                            "ingredients": Primitive(Array(
                                                length: Prefixed(VarInt),
                                                field_type: Primitive(Array(
                                                    length: Prefixed(VarInt),
                                                    field_type: Primitive(Shared("slot")),
                                                )),
                                            )),
                                            "result": Primitive(Shared("slot")),
                                        },
                                    ),
                                    "crafting_special_armordye": Unit(
                                        name: "crafting_special_armordye",
                                    ),
                                    "crafting_special_banneraddpattern": Unit(
                                        name: "crafting_special_banneraddpattern",
                                    ),
                                    "crafting_special_bannerduplicate": Unit(
                                        name: "crafting_special_bannerduplicate",
                                    ),
                                    "crafting_special_bookcloning": Unit(
                                        name: "crafting_special_bookcloning",
                                    ),
                                    "crafting_special_firework_rocket": Unit(
                                        name: "crafting_special_firework_rocket",
                                    ),
                                    "crafting_special_firework_star": Unit(
                                        name: "crafting_special_firework_star",
                                    ),
                                    "crafting_special_firework_star_fade": Unit(
                                        name: "crafting_special_firework_star_fade",
                                    ),
                                    "crafting_special_mapcloning": Unit(
                                        name: "crafting_special_mapcloning",
                                    ),
                                    "crafting_special_mapextending": Unit(
                                        name: "crafting_special_mapextending",
                                    ),
                                    "crafting_special_repairitem": Unit(
                                        name: "crafting_special_repairitem",
                                    ),
                                    "crafting_special_shielddecoration": Unit(
                                        name: "crafting_special_shielddecoration",
                                    ),
                                    "crafting_special_shulkerboxcoloring": Unit(
                                        name: "crafting_special_shulkerboxcoloring",
                                    ),
                                    "crafting_special_tippedarrow": Unit(
                                        name: "crafting_special_tippedarrow",
                                    ),
                                    "smelting": Struct(
                                        name: "smelting",
                                        fields: {
                                            "group": Primitive(String(128)),
                                            "ingredients": Primitive(Array(
                                                length: Prefixed(VarInt),
                                                field_type: Primitive(Shared("slot")),
                                            )),
                                            "result": Primitive(Shared("slot")),
                                            "experience": Float(F32),
                                            "cooking_time": Integer(VarInt),
                                        },
                                    ),
                                },
                            )),
                        },
                    )),
                )),
            },
        ),
        (Client, Play, 92): Struct(
            name: "tags",
            fields: {
                "block_tags": Primitive(Shared("tag")),
                "item_tags": Primitive(Shared("tag")),
                "fluid_tags": Primitive(Shared("tag")),
                "entity_tags": Primitive(Shared("tag")),
            },
        ),
        (Server, Handshaking, 0): Struct(
            name: "handshake",
            fields: {
                "protocol_version": Integer(VarInt),
                "server_address": Primitive(String(255)),
                "server_port": Integer(U16),
                "next_state": CustomType(Enum(
                    name: "state",
                    variant: Integer(VarInt),
                    variants: {
                        1: Unit(
                            name: "status",
                        ),
                        2: Unit(
                            name: "login",
                        ),
                    },
                )),
            },
        ),
        (Server, Status, 0): Struct(
            name: "request",
            fields: {},
        ),
        (Server, Status, 1): Struct(
            name: "ping",
            fields: {
                "payload": Integer(I64),
            },
        ),
        (Server, Login, 0): Struct(
            name: "login_start",
            fields: {
                "name": Primitive(String(16)),
            },
        ),
        (Server, Login, 1): Struct(
            name: "encryption_response",
            fields: {
                "shared_secret": Primitive(Array(
                    length: Prefixed(VarInt),
                    field_type: Integer(U8),
                )),
                "verify_token": Primitive(Array(
                    length: Prefixed(VarInt),
                    field_type: Integer(U8),
                )),
            },
        ),
        (Server, Login, 2): Struct(
            name: "login_plugin_response",
            fields: {
                "message_id": Integer(VarInt),
                "successful": Primitive(Boolean),
                "data": Primitive(Option(Primitive(Array(
                    length: RemainingLength,
                    field_type: Integer(U8),
                )))),
            },
        ),
        (Server, Play, 0): Struct(
            name: "teleport_confirm",
            fields: {
                "teleport_id": Integer(VarInt),
            },
        ),
        (Server, Play, 1): Struct(
            name: "query_block_nbt",
            fields: {
                "transaction_id": Integer(VarInt),
                "location": Primitive(Shared("position")),
            },
        ),
        (Server, Play, 2): Struct(
            name: "set_difficulty",
            fields: {
                "new_difficulty": CustomType(Enum(
                    name: "difficulty",
                    variant: Integer(I8),
                    variants: {
                        0: Unit(
                            name: "peaceful",
                        ),
                        1: Unit(
                            name: "easy",
                        ),
                        2: Unit(
                            name: "normal",
                        ),
                        3: Unit(
                            name: "hard",
                        ),
                    },
                )),
            },
        ),
        (Server, Play, 3): Struct(
            name: "chat_message",
            fields: {
                "message": Primitive(String(256)),
            },
        ),
        (Server, Play, 4): Struct(
            name: "client_status",
            fields: {
                "action": CustomType(Enum(
                    name: "action",
                    variant: Integer(VarInt),
                    variants: {
                        0: Unit(
                            name: "perform_respawn",
                        ),
                        1: Unit(
                            name: "request_stats",
                        ),
                    },
                )),
            },
        ),
        (Server, Play, 5): Struct(
            name: "client_settings",
            fields: {
                "local": Primitive(String(16)),
                "view_distance": Integer(I8),
                "chat_mode": Integer(VarInt),
                "chat_colors": Primitive(Boolean),
                "displayed_skin_parts": CustomType(BitFlags(
                    name: "displayed_skin_parts",
                    field_type: U8,
                    flags: {
                        1: "cape_enabled",
                        2: "jacket_enabled",
                        4: "left_sleeve_enabled",
                        8: "right_sleeve_enabled",
                        16: "left_pants_enabled",
                        32: "right_pants_enabled",
                        64: "hat_enabled",
                    },
                )),
                "main_hand": CustomType(Enum(
                    name: "main_hand",
                    variant: Integer(VarInt),
                    variants: {
                        0: Unit(
                            name: "left",
                        ),
                        1: Unit(
                            name: "right",
                        ),
                    },
                )),
            },
        ),
        (Server, Play, 6): Struct(
            name: "tab_complete",
            fields: {
                "transaction_id": Integer(VarInt),
                "text": Primitive(String(32500)),
            },
        ),
        (Server, Play, 7): Struct(
            name: "window_confirmation",
            fields: {
                "window_id": Integer(I8),
                "action_number": Integer(I16),
                "accepted": Primitive(Boolean),
            },
        ),
        (Server, Play, 8): Struct(
            name: "click_window_button",
            fields: {
                "window_id": Integer(I8),
                "button": Integer(I8),
            },
        ),
        (Server, Play, 9): Struct(
            name: "click_window",
            fields: {
                "window_id": Integer(U8),
                "slot": Integer(I16),
                "button": Integer(I8),
                "action_number": Integer(I16),
                "mode": Integer(VarInt),
                "clicked_item": Primitive(Shared("slot")),
            },
        ),
        (Server, Play, 10): Struct(
            name: "close_window",
            fields: {
                "window_id": Integer(U8),
            },
        ),
        (Server, Play, 11): Struct(
            name: "plugin_message",
            fields: {
                "channel": Primitive(Shared("identifier")),
                "data": Primitive(Array(
                    length: RemainingLength,
                    field_type: Integer(U8),
                )),
            },
        ),
        (Server, Play, 12): Struct(
            name: "edit_book",
            fields: {
                "new_book": Primitive(Shared("slot")),
                "is_signed": Primitive(Boolean),
                "hand": Primitive(Shared("hand")),
            },
        ),
        (Server, Play, 13): Struct(
            name: "entity_nbt_request",
            fields: {
                "transaction_id": Integer(VarInt),
                "entity_id": Primitive(Shared("entity_id")),
            },
        ),
        (Server, Play, 14): Struct(
            name: "interact_entity",
            fields: {
                "entity_id": Primitive(Shared("entity_id")),
                "type": CustomType(Enum(
                    name: "type",
                    variant: Integer(VarInt),
                    variants: {
                        0: Struct(
                            name: "interact",
                            fields: {
                                "hand": Primitive(Shared("hand")),
                            },
                        ),
                        1: Unit(
                            name: "attack",
                        ),
                        2: Struct(
                            name: "interact_at",
                            fields: {
                                "target_x": Float(F32),
                                "target_y": Float(F32),
                                "target_z": Float(F32),
                                "hand": Primitive(Shared("hand")),
                            },
                        ),
                    },
                )),
            },
        ),
        (Server, Play, 15): Struct(
            name: "keep_alive",
            fields: {
                "keep_alive_id": Integer(I64),
            },
        ),
        (Server, Play, 16): Struct(
            name: "lock_difficulty",
            fields: {
                "locked": Primitive(Boolean),
            },
        ),
        (Server, Play, 17): Struct(
            name: "player_position",
            fields: {
                "x": Float(F64),
                "feet_y": Float(F64),
                "z": Float(F64),
                "on_ground": Primitive(Boolean),
            },
        ),
        (Server, Play, 18): Struct(
            name: "player_position_and_rotation",
            fields: {
                "x": Float(F64),
                "feet_y": Float(F64),
                "z": Float(F64),
                "yaw": Float(F32),
                "pitch": Float(F32),
                "on_ground": Primitive(Boolean),
            },
        ),
        (Server, Play, 19): Struct(
            name: "player_rotation",
            fields: {
                "yaw": Float(F32),
                "pitch": Float(F32),
                "on_ground": Primitive(Boolean),
            },
        ),
        (Server, Play, 20): Struct(
            name: "player_movement",
            fields: {
                "on_ground": Primitive(Boolean),
            },
        ),
        (Server, Play, 21): Struct(
            name: "vehicle_move",
            fields: {
                "x": Float(F64),
                "y": Float(F64),
                "z": Float(F64),
                "yaw": Float(F32),
                "pitch": Float(F32),
            },
        ),
        (Server, Play, 22): Struct(
            name: "steer_boat",
            fields: {
                "left_paddle_turning": Primitive(Boolean),
                "right_paddle_turning": Primitive(Boolean),
            },
        ),
        (Server, Play, 23): Struct(
            name: "pick_item",
            fields: {
                "slot_to_use": Integer(VarInt),
            },
        ),
        (Server, Play, 24): Struct(
            name: "craft_recipe_request",
            fields: {
                "window_id": Integer(I8),
                "recipe": Primitive(Shared("identifier")),
                "make_all": Primitive(Boolean),
            },
        ),
        (Server, Play, 25): Struct(
            name: "player_abilities",
            fields: {
                "flags": CustomType(BitFlags(
                    name: "flags",
                    field_type: I8,
                    flags: {
                        1: "is_creative",
                        2: "is_flying",
                        4: "can_fly",
                        8: "damage_disabled",
                    },
                )),
                "flying_speed": Float(F32),
                "walking_speed": Float(F32),
            },
        ),
        (Server, Play, 26): Struct(
            name: "player_digging",
            fields: {
                "status": CustomType(Enum(
                    name: "status",
                    variant: Integer(VarInt),
                    variants: {
                        0: Unit(
                            name: "started_digging",
                        ),
                        1: Unit(
                            name: "cancelled_digging",
                        ),
                        2: Unit(
                            name: "finished_digging",
                        ),
                        3: Unit(
                            name: "drop_item_stack",
                        ),
                        4: Unit(
                            name: "drop_item",
                        ),
                        5: Unit(
                            name: "shoot_arrow_finish_eating",
                        ),
                        6: Unit(
                            name: "swap_item_in_hand",
                        ),
                    },
                )),
                "location": Primitive(Shared("position")),
                "face": CustomType(Enum(
                    name: "face",
                    variant: Integer(I8),
                    variants: {
                        0: Unit(
                            name: "bottom",
                        ),
                        1: Unit(
                            name: "top",
                        ),
                        2: Unit(
                            name: "north",
                        ),
                        3: Unit(
                            name: "south",
                        ),
                        4: Unit(
                            name: "west",
                        ),
                        5: Unit(
                            name: "east",
                        ),
                    },
                )),
            },
        ),
        (Server, Play, 27): Struct(
            name: "entity_action",
            fields: {
                "entity_id": Primitive(Shared("entity_id")),
                "action_id": CustomType(Enum(
                    name: "action",
                    variant: Integer(VarInt),
                    variants: {
                        0: Unit(
                            name: "start_sneaking",
                        ),
                        1: Unit(
                            name: "stop_sneaking",
                        ),
                        2: Unit(
                            name: "leave_bed",
                        ),
                        3: Unit(
                            name: "start_sprinting",
                        ),
                        4: Unit(
                            name: "stop_sprinting",
                        ),
                        5: Unit(
                            name: "start_jump_with_horse",
                        ),
                        6: Unit(
                            name: "stop_jump_with_horse",
                        ),
                        7: Unit(
                            name: "open_horse_inventory",
                        ),
                        8: Unit(
                            name: "start_flying_with_elytra",
                        ),
                    },
                )),
                "jump_boost": Integer(VarInt),
            },
        ),
        (Server, Play, 28): Struct(
            name: "steer_vehicle",
            fields: {
                "sideways": Float(F32),
                "forward": Float(F32),
                "flags": CustomType(BitFlags(
                    name: "flags",
                    field_type: U8,
                    flags: {
                        1: "jump",
                        2: "unmount",
                    },
                )),
            },
        ),
        (Server, Play, 29): Struct(
            name: "recipe_book_data",
            fields: {
                "type": CustomType(Enum(
                    name: "type",
                    variant: Integer(VarInt),
                    variants: {
                        0: Struct(
                            name: "display_name",
                            fields: {
                                "recipe_id": Primitive(Shared("identifier")),
                            },
                        ),
                        1: Struct(
                            name: "recipe_book_states",
                            fields: {
                                "crafting_recipe_book_open": Primitive(Boolean),
                                "crafting_recipe_filter_active": Primitive(Boolean),
                                "smelting_recipe_book_open": Primitive(Boolean),
                                "smelting_recipe_filter_active ": Primitive(Boolean),
                            },
                        ),
                    },
                )),
                "blasting_recipe_book_open": Primitive(Boolean),
                "blasting_recipe_filter_active": Primitive(Boolean),
                "smoking_recipe_book_open ": Primitive(Boolean),
                "smoking_recipe_filter_active ": Primitive(Boolean),
            },
        ),
        (Server, Play, 30): Struct(
            name: "name_item",
            fields: {
                "item_name": Primitive(String(32767)),
            },
        ),
        (Server, Play, 31): Enum(
            name: "resource_pack_status",
            variant: Integer(VarInt),
            variants: {
                0: Unit(
                    name: "successfully_loaded",
                ),
                1: Unit(
                    name: "declined",
                ),
                2: Unit(
                    name: "failed_download",
                ),
                3: Unit(
                    name: "accepted",
                ),
            },
        ),
        (Server, Play, 32): Struct(
            name: "advancement_tab",
            fields: {
                "action": CustomType(Enum(
                    name: "action",
                    variant: Integer(VarInt),
                    variants: {
                        0: Struct(
                            name: "opened_tab",
                            fields: {
                                "tab_id": Primitive(Shared("identifier")),
                            },
                        ),
                        1: Unit(
                            name: "closen_screen",
                        ),
                    },
                )),
            },
        ),
        (Server, Play, 33): Struct(
            name: "select_trade",
            fields: {
                "selected_slot": Integer(VarInt),
            },
        ),
        (Server, Play, 34): Struct(
            name: "set_beacon_effect",
            fields: {
                "primary_effect": Integer(VarInt),
                "secondary_effect": Integer(VarInt),
            },
        ),
        (Server, Play, 35): Struct(
            name: "held_item_change",
            fields: {
                "slot": Integer(I16),
            },
        ),
        (Server, Play, 36): Struct(
            name: "update_command_block",
            fields: {
                "location": Primitive(Shared("position")),
                "command": Primitive(String(32767)),
                "mode": CustomType(Enum(
                    name: "mode",
                    variant: Integer(VarInt),
                    variants: {
                        0: Unit(
                            name: "sequence",
                        ),
                        1: Unit(
                            name: "auto",
                        ),
                        2: Unit(
                            name: "redstone",
                        ),
                    },
                )),
                "flags": CustomType(BitFlags(
                    name: "flags",
                    field_type: I8,
                    flags: {
                        1: "track_output",
                        2: "is_conditional",
                        4: "automatic",
                    },
                )),
            },
        ),
        (Server, Play, 37): Struct(
            name: "update_command_block_minecraft",
            fields: {
                "entity_id": Primitive(Shared("entity_id")),
                "command": Primitive(String(0)),
                "tract_output": Primitive(Boolean),
            },
        ),
        (Server, Play, 38): Struct(
            name: "creative_inventory_action",
            fields: {
                "slot": Integer(I16),
                "clicked_item": Primitive(Shared("slot")),
            },
        ),
        (Server, Play, 39): Struct(
            name: "update_jigsaw_block",
            fields: {
                "location": Primitive(Shared("position")),
                "attachment_type": Primitive(Shared("identifier")),
                "target_pool": Primitive(Shared("identifier")),
                "final_state": Primitive(String(0)),
            },
        ),
        (Server, Play, 40): Struct(
            name: "update_structure_block",
            fields: {
                "location": Primitive(Shared("postion")),
                "action": CustomType(Enum(
                    name: "action",
                    variant: Integer(VarInt),
                    variants: {
                        0: Unit(
                            name: "update_data",
                        ),
                        1: Unit(
                            name: "save_structure",
                        ),
                        2: Unit(
                            name: "load_the_structure",
                        ),
                        3: Unit(
                            name: "detect_size",
                        ),
                    },
                )),
                "mode": CustomType(Enum(
                    name: "mode",
                    variant: Integer(VarInt),
                    variants: {
                        0: Unit(
                            name: "save",
                        ),
                        1: Unit(
                            name: "load",
                        ),
                        2: Unit(
                            name: "corner",
                        ),
                        3: Unit(
                            name: "data",
                        ),
                    },
                )),
                "name": Primitive(String(0)),
                "offset_x": Integer(U8),
                "offset_y": Integer(U8),
                "offset_z": Integer(U8),
                "size_x": Integer(U8),
                "size_y": Integer(U8),
                "size_z": Integer(U8),
                "mirror": CustomType(Enum(
                    name: "mirror",
                    variant: Integer(VarInt),
                    variants: {
                        0: Unit(
                            name: "none",
                        ),
                        1: Unit(
                            name: "left_right",
                        ),
                        2: Unit(
                            name: "front_back",
                        ),
                    },
                )),
                "rotation": CustomType(Enum(
                    name: "rotation",
                    variant: Integer(VarInt),
                    variants: {
                        0: Unit(
                            name: "none",
                        ),
                        1: Unit(
                            name: "clockwise_90",
                        ),
                        2: Unit(
                            name: "clockwise_180",
                        ),
                        3: Unit(
                            name: "counter_clockwise_90",
                        ),
                    },
                )),
                "metadata": Primitive(String(0)),
                "integrity": Float(F32),
                "seed": Integer(VarLong),
                "flags": CustomType(BitFlags(
                    name: "flags",
                    field_type: U8,
                    flags: {
                        1: "ignore_entities",
                        2: "show_air",
                        4: "show_bounding_box",
                    },
                )),
            },
        ),
        (Server, Play, 41): Struct(
            name: "update_sign",
            fields: {
                "location": Primitive(Shared("position")),
                "line_1": Primitive(String(384)),
                "line_2": Primitive(String(384)),
                "line_3": Primitive(String(384)),
                "line_4": Primitive(String(384)),
            },
        ),
        (Server, Play, 42): Struct(
            name: "animation",
            fields: {
                "hand": Primitive(Shared("hand")),
            },
        ),
        (Server, Play, 43): Struct(
            name: "spectate",
            fields: {
                "target_player": Primitive(Uuid),
            },
        ),
        (Server, Play, 44): Struct(
            name: "player_block_placement",
            fields: {
                "hand": Primitive(Shared("hand")),
                "location": Primitive(Shared("position")),
                "face": Primitive(Shared("face")),
                "cursor_position_x": Float(F32),
                "cursor_position_y": Float(F32),
                "cursor_position_z": Float(F32),
                "inside_block": Primitive(Boolean),
            },
        ),
        (Server, Play, 45): Struct(
            name: "use_item",
            fields: {
                "hand": Primitive(Shared("hand")),
            },
        ),
    },
    shared_types: [
        Enum(
            name: "dimension",
            variant: Integer(I32),
            variants: {
                -1: Unit(
                    name: "nether",
                ),
                0: Unit(
                    name: "overworld",
                ),
                1: Unit(
                    name: "end",
                ),
            },
        ),
        Enum(
            name: "face",
            variant: Integer(VarInt),
            variants: {
                0: Unit(
                    name: "bottom",
                ),
                1: Unit(
                    name: "top",
                ),
                2: Unit(
                    name: "north",
                ),
                3: Unit(
                    name: "south",
                ),
                4: Unit(
                    name: "west",
                ),
                5: Unit(
                    name: "east",
                ),
            },
        ),
        Enum(
            name: "feet_eyes",
            variant: Integer(VarInt),
            variants: {
                0: Unit(
                    name: "feet",
                ),
                1: Unit(
                    name: "eyes",
                ),
            },
        ),
        Enum(
            name: "gamemode",
            variant: Integer(U8),
            variants: {
                0: Unit(
                    name: "survival",
                ),
                1: Unit(
                    name: "creative",
                ),
                2: Unit(
                    name: "spectator",
                ),
                8: Unit(
                    name: "survival_hardcore",
                ),
                9: Unit(
                    name: "creative_hardcore",
                ),
                10: Unit(
                    name: "adventure_hardcore",
                ),
                11: Unit(
                    name: "spectator_hardcore",
                ),
            },
        ),
        Enum(
            name: "hand",
            variant: Integer(VarInt),
            variants: {
                0: Unit(
                    name: "main_hand",
                ),
                1: Unit(
                    name: "off_hand",
                ),
            },
        ),
        BitField(
            name: "position",
            fields: {
                "x": I32(26),
                "z": I32(26),
                "y": I16(12),
            },
        ),
        Enum(
            name: "slot",
            variant: Primitive(Boolean),
            variants: {
                false: Unit(
                    name: "empty",
                ),
                true: Struct(
                    name: "item",
                    fields: {
                        "id": Integer(VarInt),
                        "count": Integer(VarInt),
                        "nbt": Primitive(Nbt),
                    },
                ),
            },
        ),
    ],
)